export function useNotifications() {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –µ –≤–∏–¥–∏–º–æ
  function isAppVisible() {
    return !document.hidden
  }
  
  // –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
  function showNotification(title, message, actions = []) {
    if (isAppVisible()) {
      // –ê–∫–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –µ –≤–∏–¥–∏–º–æ, –Ω–µ –ø–æ–∫–∞–∑–≤–∞–º–µ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
      console.log('üì± App is visible, skipping notification')
      return
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –±—Ä–∞—É–∑—ä—Ä—ä—Ç –ø–æ–¥–¥—ä—Ä–∂–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if (!('Notification' in window)) {
      console.log('‚ùå This browser does not support notifications')
      return
    }
    
    // –ü–æ–∏—Å–∫–∞–Ω–µ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∞–∫–æ –Ω–µ –µ –¥–∞–¥–µ–Ω–æ
    if (Notification.permission === 'default') {
      Notification.requestPermission().then(permission => {
        if (permission === 'granted') {
          createNotification(title, message, actions)
        }
      })
    } else if (Notification.permission === 'granted') {
      createNotification(title, message, actions)
    } else {
      console.log('üîá Notification permission denied')
    }
  }
  
  // –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
  function createNotification(title, message, actions) {
    const notification = new Notification(title, {
      body: message,
      icon: '/icons/icon-128x128.png', // –ú–æ–∂–µ—Ç–µ –¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ –∏–∫–æ–Ω–∞ –ø–æ-–∫—ä—Å–Ω–æ
      badge: '/icons/icon-128x128.png',
      tag: 'chatzone-message', // –ì—Ä—É–ø–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      requireInteraction: false,
      actions: actions
    })
    
    // –ö–ª–∏–∫ –≤—ä—Ä—Ö—É –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è—Ç–∞ –æ—Ç–≤–∞—Ä—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ
    notification.onclick = () => {
      window.focus()
      notification.close()
    }
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ —Å–ª–µ–¥ 5 —Å–µ–∫—É–Ω–¥–∏
    setTimeout(() => {
      notification.close()
    }, 5000)
    
    return notification
  }
  
  // –ù–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞ –Ω–æ–≤–æ —Å—ä–æ–±—â–µ–Ω–∏–µ
  function notifyNewMessage(sender, message, channelName) {
    const truncatedMessage = message.length > 50 ? message.substring(0, 50) + '...' : message
    showNotification(
      `üí¨ ${sender} in #${channelName}`,
      truncatedMessage,
      [
        {
          action: 'open',
          title: 'Open Chat'
        }
      ]
    )
  }
  
  // –ù–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞ mention
  function notifyMention(sender, message, channelName) {
    const truncatedMessage = message.length > 50 ? message.substring(0, 50) + '...' : message
    showNotification(
      `üîî ${sender} mentioned you in #${channelName}`,
      truncatedMessage,
      [
        {
          action: 'open',
          title: 'View Message'
        }
      ]
    )
  }
  
  // –ù–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞ –ø–æ–∫–∞–Ω–∞ –≤ –∫–∞–Ω–∞–ª
  function notifyChannelInvite(inviter, channelName) {
    showNotification(
      'üì® Channel Invite',
      `${inviter} invited you to join #${channelName}`,
      [
        {
          action: 'join',
          title: 'Join Channel'
        }
      ]
    )
  }
  
  // –¢–µ—Å—Ç–æ–≤–∞ –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
  function testNotification() {
    showNotification(
      'üß™ ChatZone Test',
      'This is a test notification! Notifications are working correctly.',
      [
        {
          action: 'test',
          title: 'OK'
        }
      ]
    )
  }
  
  return {
    showNotification,
    notifyNewMessage,
    notifyMention,
    notifyChannelInvite,
    testNotification,
    isAppVisible
  }
}